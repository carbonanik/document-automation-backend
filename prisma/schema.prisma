// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String?
  whatsApp  String?
  email     String   @unique
  password  String
  role      Role     @default(USER) // ‚Üê New field
  createdAt DateTime @default(now())

  landForms LandForm[] @relation("UserLandForms")
  bkashRecharges BkashRecharge[] @relation("UserBkashRecharges")
}

enum Role {
  ADMIN
  USER
}

model LandForm {
  id                 String      @id @default(cuid())
  bd_form_no         String?
  appendix           String?
  serial_no          String?
  paragraph_no       String?
  office_name        String?
  mouzar_no          String?
  thana              String?
  district           String?
  khatian_no         String?
  reg_holding_no     String?
  total_land_amount  String?
  table_row_1        String?
  table_row_2        String?
  table_row_3        String?
  table_row_4        String?
  table_row_5        String?
  table_row_6        String?
  table_row_7        String?
  total_where        String?
  note               String?
  invoice_no         String?
  date_bangla        String?
  date_english       String?
  createdAt          DateTime    @default(now())
  createdById        Int
  createdBy          User        @relation("UserLandForms", fields: [createdById], references: [id])

  owners             Owner[]     @relation("LandFormOwners")
  lands              LandInfo[]  @relation("LandFormLands")
}


model Owner {
  id         String    @id @default(cuid())
  name       String
  share      String

  landForm   LandForm  @relation("LandFormOwners", fields: [landFormId], references: [id])
  landFormId String
}


model LandInfo {
  id          String    @id @default(cuid())
  landClass   String
  landAmount  String
  stainNo     String

  landForm    LandForm  @relation("LandFormLands", fields: [landFormId], references: [id])
  landFormId  String
}


model BkashRecharge {
  id         Int      @id @default(autoincrement())
  amount     Float
  trxId      String   @unique
  status     RechargeStatus @default(PENDING)
  bkashNo    String   // e.g. "017XXXXXXXX"
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Optional: Link to user who submitted the recharge
  userId     Int?
  user       User?    @relation( "UserBkashRecharges", fields: [userId], references: [id])
}

enum RechargeStatus {
  PENDING
  APPROVED
  REJECTED
}

